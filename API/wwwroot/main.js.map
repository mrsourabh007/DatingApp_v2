{"version":3,"sources":["./src/app/errors/test-errors/test-errors.component.ts","./src/app/errors/test-errors/test-errors.component.html","./src/app/_forms/date-input/date-input.component.ts","./src/app/_forms/date-input/date-input.component.html","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/errors/not-found/not-found.component.ts","./src/app/errors/not-found/not-found.component.html","./src/app/_services/account.service.ts","./src/app/errors/server-error/server-error.component.ts","./src/app/errors/server-error/server-error.component.html","./src/app/_directives/has-role.directive.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/_interceptors/jwt.interceptor.ts","./src/app/messages/messages.component.ts","./src/app/messages/messages.component.html","./src/app/_forms/select-input/select-input.component.ts","./src/app/_forms/select-input/select-input.component.html","./src/app/_modules/shared.module.ts","./src/app/_interceptors/error.interceptor.ts","./src/app/_guards/admin.guard.ts","./src/app/_services/admin.service.ts","./src/app/admin/user-management/user-management.component.ts","./src/app/admin/user-management/user-management.component.html","./src/app/members/member-detail/member-detail.component.ts","./src/app/members/member-detail/member-detail.component.html","./src/app/_guards/auth.guard.ts","./src/app/members/member-list/member-list.component.ts","./src/app/members/member-list/member-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/_services/members.service.ts","./src/app/app.module.ts","./src/app/_forms/text-input/text-input.component.ts","./src/app/_forms/text-input/text-input.component.html","./src/app/lists/lists.component.ts","./src/app/lists/lists.component.html","./src/app/nav/nav.component.ts","./src/app/nav/nav.component.html","./src/app/members/member-card/member-card.component.ts","./src/app/members/member-card/member-card.component.html","./src/app/admin/admin-panel/admin-panel.component.ts","./src/app/admin/admin-panel/admin-panel.component.html","./src/app/members/member-edit/member-edit.component.ts","./src/app/members/member-edit/member-edit.component.html","./src/app/app-routing.module.ts","./src/app/modals/roles-modal/roles-modal.component.ts","./src/app/modals/roles-modal/roles-modal.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-test-errors',\r\n  templateUrl: './test-errors.component.html',\r\n  styleUrls: ['./test-errors.component.css']\r\n})\r\nexport class TestErrorsComponent implements OnInit {\r\n  baseUrl = environment.apiUrl;\r\n  validationErrors: string[]=[];\r\n  constructor(private http: HttpClient) { }\r\npublic list=[{\r\n  text:\"text1\",\r\n  val:\"1\"\r\n},{\r\n  text:\"text2\",\r\n  val:\"2\"\r\n}]\r\n  ngOnInit(): void {\r\n  }\r\n  get404Error() {\r\n    this.http.get(this.baseUrl + 'buggy/not-found').subscribe(responce => {\r\n      console.log(responce);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  get400Error() {\r\n    this.http.get(this.baseUrl + 'buggy/bad-request').subscribe(responce => {\r\n      console.log(responce);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  get500Error() {\r\n    this.http.get(this.baseUrl + 'buggy/server-error').subscribe(responce => {\r\n      console.log(responce);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  get401Error() {\r\n    this.http.get(this.baseUrl + 'buggy/auth').subscribe(responce => {\r\n      console.log(responce);\r\n    }, error => {\r\n      console.log(error);\r\n    })\r\n  }\r\n  get404validationError() {\r\n    this.http.post(this.baseUrl + 'account/register',{}).subscribe(responce => {\r\n      console.log(responce);\r\n    }, error => {\r\n      console.log(error);\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n}\r\n","<ng-container>\r\n    <button (click)=\"get500Error()\" class=\"btn btn-outline-primary mr-3\">Test 500 error</button>\r\n    <button (click)=\"get400Error()\" class=\"btn btn-outline-primary mr-3\">Test 400</button>\r\n    <button (click)=\"get401Error()\" class=\"btn btn-outline-primary mr-3\">Test 401</button>\r\n    <button (click)=\"get404Error()\" class=\"btn btn-outline-primary mr-3\">Test 404</button>\r\n    <button (click)=\"get404validationError()\" class=\"btn btn-outline-primary mr-3\">Test 400Validation</button>\r\n\r\n    <div class=\"row mt-5\" *ngIf=\"validationErrors.length>0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"form-group\">\r\n        <label>Who is your favourite user?</label>\r\n        <select class=\"form-control\">\r\n            <option *ngFor=\"let user of list\" [value]=\"user.val\">\r\n                {{user.text}}\r\n            </option>\r\n        </select>\r\n    </div>\r\n    <p *ngFor=\"let item of list\">{{item.text}}</p>\r\n</ng-container>","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { BsDatepickerConfig } from 'ngx-bootstrap/datepicker';\r\n\r\n@Component({\r\n  selector: 'app-date-input',\r\n  templateUrl: './date-input.component.html',\r\n  styleUrls: ['./date-input.component.css']\r\n})\r\nexport class DateInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() maxDate: Date;\r\n  bsConfig: Partial<BsDatepickerConfig>;\r\n\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n    this.bsConfig = {\r\n      containerClass: 'theme-dark-blue',\r\n      dateInputFormat: 'DD MMM YYYY'\r\n    }\r\n  }\r\n  writeValue(obj: any): void {\r\n   \r\n  }\r\n  registerOnChange(fn: any): void {\r\n    \r\n  }\r\n  registerOnTouched(fn: any): void {\r\n   \r\n  }\r\n  \r\n}\r\n","<div class=\"form-group\">\r\n    <label [for]=\"ngControl.control\" class=\"control-label\"> {{label}}</label>\r\n    <input \r\n        type=\"text\"\r\n        [class.is-invalid]='ngControl.touched && ngControl.invalid'\r\n        class='form-control'\r\n        [formControl]='ngControl.control'\r\n        placeholder=\"{{label}}\"\r\n        bsDatepicker\r\n        [bsConfig]='bsConfig'\r\n        [maxDate]='maxDate'\r\n    >\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">{{label}} is required</div>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { AbstractControl, FormBuilder, FormControl, FormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.css']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n\r\n  @Input() usersFromHomeComponent: any;\r\n  @Output() cancelRegister = new EventEmitter();\r\n  registerForm: FormGroup;\r\n  maxDate: Date;\r\n  validationErrors: string[] = [];\r\n\r\n  constructor(private accountService: AccountService, private toastr: ToastrService, private fb: FormBuilder, private routar:Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.intitializeForm();\r\n    this.maxDate = new Date();\r\n    this.maxDate.setFullYear(this.maxDate.getFullYear() -18);\r\n  }\r\n  intitializeForm() {\r\n    this.registerForm = this.fb.group({\r\n      gender: ['male'],\r\n      username: ['', Validators.required],\r\n      knownAs: ['', Validators.required],\r\n      dateOfBirth: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n      password: ['', [Validators.required,\r\n      Validators.minLength(4), Validators.maxLength(8)]],\r\n      confirmPassword: ['', [Validators.required, this.matchValue('password')]]\r\n    })\r\n    this.registerForm.controls.password.valueChanges.subscribe(() => {\r\n      this.registerForm.controls.confirmPassword.updateValueAndValidity();\r\n    })\r\n  }\r\n  matchValue(matchTo: string): ValidatorFn {\r\n    return (control: AbstractControl) => {\r\n      return control?.value === control?.parent?.controls[matchTo].value\r\n        ? null : { isMatching: true }\r\n    }\r\n  }\r\n  register() {   \r\n    this.accountService.register(this.registerForm.value).subscribe(response => {\r\n    this.routar.navigateByUrl('/members');\r\n    }, error => {\r\n      this.validationErrors = error;\r\n    })\r\n  }\r\n  cancel() {\r\n    this.cancelRegister.emit(false);\r\n  }\r\n}\r\n","<form [formGroup]='registerForm' (ngSubmit)=\"registerForm.valid && register()\" autocomplete=\"off\">\r\n    <h2 class=\"text-center text-primary\">Sign up</h2>\r\n    <hr>\r\n    <div class=\"form-group\">\r\n        <label class=\"control-label\" style=\"margin-right: 10px;\">I am a: </label>\r\n        <label class=\"radio-inline\">\r\n            <input type=\"radio\" value='male' formControlName='gender'> Male\r\n        </label>\r\n        <label class=\"radio-inline\">\r\n            <input type=\"radio\" value='female' formControlName='gender' class=\"ml-3\"> Female\r\n        </label>\r\n    </div>\r\n    <app-text-input [formControl]='registerForm.controls[\"username\"]' [label]='\"Username\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"knownAs\"]' [label]='\"Known As\"'></app-text-input>\r\n    <app-date-input [formControl]='registerForm.controls[\"dateOfBirth\"]' [label]='\"Date Of Birth\"' [maxDate]='maxDate'>\r\n    </app-date-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"city\"]' [label]='\"City\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"country\"]' [label]='\"Country\"'></app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"password\"]' [label]='\"Password\"' [type]='\"password\"'>\r\n    </app-text-input>\r\n    <app-text-input [formControl]='registerForm.controls[\"confirmPassword\"]' [label]='\"Confirm Password\"'\r\n        [type]='\"password\"'></app-text-input>\r\n        <app-select-input [formControl]='registerForm.controls[\"username\"]' [label]='\"Username\"'></app-select-input>\r\n\r\n    <div class=\"row \" *ngIf=\"validationErrors.length>0\">\r\n        <ul class=\"text-danger\">\r\n            <li *ngFor=\"let error of validationErrors\">\r\n                {{error}}\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"form-group text-center\">\r\n        <button [disabled]='!registerForm.valid' class=\"btn btn-success mr-2\" type=\"submit\">Register</button>\r\n        <button class=\"btn btn-danger mr-2\" (click)=\"cancel()\" type=\"button\">Cancel</button>\r\n    </div>\r\n</form>\r\n<!-- <p>form value: {{registerForm.value | json}}</p>\r\n<p>form value: {{registerForm.status | json}}</p> -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <h1>Not Found</h1>\r\n    <button class=\"btn btn-info btn-lg\" routerLink='/'>Return to home page</button>\r\n</div>","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { from, ReplaySubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators'\r\nimport { environment } from 'src/environments/environment';\r\nimport { User } from '../_models/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AccountService {\r\n  baseUrl = environment.apiUrl;\r\n  private currentUserSource = new ReplaySubject<User>(1);\r\n  currentUser$ = this.currentUserSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) { }\r\n  login(model: any) {\r\n    return this.http.post(this.baseUrl + 'account/login', model).pipe(\r\n      map((response: User) => {\r\n        const user = response;\r\n        if (user) {\r\n          this.setCurrentUser(user);\r\n         // this.currentUserSource.next(user);\r\n        }\r\n      })\r\n    )\r\n  }\r\nregister(model: any){\r\n  return this.http.post(this.baseUrl + 'account/register' , model).pipe(\r\n    map((user: User)=> {\r\n      if(user) {\r\n        this.setCurrentUser(user);\r\n       // this.currentUserSource.next(user);\r\n      }\r\n      return user;\r\n    })\r\n  )\r\n}\r\n  setCurrentUser(user: User) {\r\n    user.roles = [];\r\n    const roles = this.getDecodedToken(user.token).role;\r\n    Array.isArray(roles) ? user.roles = roles : user.roles.push(roles);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    this.currentUserSource.next(user);   \r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('user');\r\n    this.currentUserSource.next(null);\r\n  }\r\n  getDecodedToken(token){\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-server-error',\r\n  templateUrl: './server-error.component.html',\r\n  styleUrls: ['./server-error.component.css']\r\n})\r\nexport class ServerErrorComponent implements OnInit {\r\n\r\n  error: any;\r\n\r\n  constructor(private router: Router) {\r\n    const navigation = this.router.getCurrentNavigation();\r\n    this.error = navigation?.extras?.state?.error;\r\n    console.log(this.error);\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h4>Internal server error - refreshing the page will make the error disappear!</h4>\r\n<ng-container *ngIf=\"error\">\r\n    <h5 class='text-danger'>Error: {{error.message}}</h5>\r\n    <p class=\"font-weight-bold\">Note: If you are seeing this then Angular is probably not to blame</p>\r\n    <p>What to do next?</p>\r\n    <ol>\r\n        <li>Open the chrome dev tools</li>\r\n        <li>Inspect the network tab</li>\r\n        <li>Check the failing request</li>\r\n        <li>Examine the request URL - make sure it is correct</li>\r\n        <li>Reproduce the error in Postman - if we see the same response, then the issue is not with Angular</li>\r\n    </ol>\r\n    <p>Following is the stack trace - this is where your investigation should start!</p>\r\n    <code class=\"mt-5\" style=\"background-color: whitesmoke;\">{{error.details}}</code>\r\n</ng-container>","import { Directive, Input, OnInit, TemplateRef, ViewContainerRef } from '@angular/core';\nimport { take } from 'rxjs/operators';\nimport { User } from '../_models/user';\nimport { AccountService } from '../_services/account.service';\n\n@Directive({\n  selector: '[appHasRole]'\n})\nexport class HasRoleDirective implements OnInit  {\n  @Input() appHasRole: string[];\n  user: User;\n  constructor(private viewContainerRef: ViewContainerRef, \n    private templateRef: TemplateRef<any>, \n    private accountService: AccountService) {\n      this.accountService.currentUser$.pipe(take(1)).subscribe(user => {\n        this.user = user;\n      })\n     }\n\n  ngOnInit(): void {\n    // clear view if no roles\n    if (!this.user?.roles || this.user == null) {\n      this.viewContainerRef.clear();\n      return;\n    }\n\n    if (this.user?.roles.some(r  => this.appHasRole.includes(r))) {\n      this.viewContainerRef.createEmbeddedView(this.templateRef);\n    } else {\n      this.viewContainerRef.clear();\n    }\n  }\n\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  registerMode = false;\r\n  users: any;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  ngOnInit(): void {\r\n   // this.getUser();\r\n  }\r\n  registerToggle() {\r\n    this.registerMode = !this.registerMode;\r\n  }\r\n  // getUser() {\r\n  //   this.http.get('https://localhost:5001/api/users').subscribe(user => this.users = user);\r\n  // }\r\n  cancelRegisterMode(event: boolean){\r\n    this.registerMode=event;\r\n  }\r\n}\r\n","<div class=\"container mt-5\">\r\n    <div *ngIf=\"!registerMode\" style=\"text-align: center;\">\r\n        <h1>Find your match</h1>\r\n        <p class=\"lead\">Come on in to view your matches.. all you need to do is sign up!</p>\r\n        <div class=\"text-center\">\r\n            <button (click)=\"registerToggle()\" class=\"btn btn-primary btn-lg mr-2\">Register</button>\r\n            <button class=\"btn btn-success btn-lg mr-2\">Learn More</button>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"registerMode\" class=\"container\">\r\n        <div class=\"row justify-content-center\">\r\n            <div class=\"col-4\">\r\n               <app-register [usersFromHomeComponent]=\"users\" (cancelRegister)=\"cancelRegisterMode($event)\"></app-register>               \r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'https://localhost:5001/api/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { AccountService } from '../_services/account.service';\r\nimport { User } from '../_models/user';\r\nimport { take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private accountService:AccountService) {}\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n\r\n    let currentUser:User;\r\n\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(user => currentUser=user);\r\n    if(currentUser){\r\n      request= request.clone({\r\n        setHeaders: {\r\n          Authorization: `Bearer ${currentUser.token}`\r\n        }\r\n      })\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-messages',\r\n  templateUrl: './messages.component.html',\r\n  styleUrls: ['./messages.component.css']\r\n})\r\nexport class MessagesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>messages works!</p>\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-select-input',\r\n  templateUrl: './select-input.component.html',\r\n  styleUrls: ['./select-input.component.css']\r\n})\r\nexport class SelectInputComponent implements ControlValueAccessor {\r\n\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n  constructor(@Self() public ngControl: NgControl) {\r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n  writeValue(obj: any): void {\r\n\r\n  }\r\n  registerOnChange(fn: any): void {\r\n\r\n  }\r\n  registerOnTouched(fn: any): void {\r\n\r\n  }\r\n}\r\n","<div class=\"form-group\">\r\n    <select \r\n        [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n        class=\"form-control\" \r\n        [formControl]=\"ngControl.control\">\r\n        <option value=\"\">{{label}}</option></select>\r\n    <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n  \r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\r\nimport { ToastrModule } from 'ngx-toastr';\r\nimport { TabsModule } from 'ngx-bootstrap/tabs';\r\nimport { NgxGalleryModule } from '@kolkov/ngx-gallery';\r\nimport { BsDatepickerModule } from 'ngx-bootstrap/datepicker';\r\nimport { ModalModule } from 'ngx-bootstrap/modal';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    BsDropdownModule.forRoot(),\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-bottom-right'\r\n    }),\r\n    TabsModule.forRoot(),\r\n    NgxGalleryModule,\r\n    BsDatepickerModule.forRoot(),\r\n    ModalModule.forRoot()\r\n  ],\r\n  exports :[\r\n    BsDropdownModule,\r\n    ToastrModule,\r\n    TabsModule,\r\n    NgxGalleryModule,\r\n    BsDatepickerModule,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { NavigationExtras, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable()\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private router: Router, private toastr: ToastrService) { }\r\n\r\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(request).pipe(\r\n      catchError(error => {\r\n        if (error) {\r\n          switch (error.status) {\r\n            case 400:\r\n              if (error.error.errors) {\r\n                const modalStateErrors = [];\r\n                for (const key in error.error.errors) {\r\n                  if (error.error.errors[key]) {\r\n                    modalStateErrors.push(error.error.errors[key])\r\n                  }\r\n                }\r\n                throw modalStateErrors.flat();\r\n              } else {\r\n                this.toastr.error(error.statusText, error.status)\r\n              }\r\n              break;\r\n            case 401:\r\n             // this.toastr.error(error.statusText, error.status)\r\n             this.toastr.error(error.statusText === 'OK' ? 'Unauthorised' : error.statusText, error.status);\r\n              break;\r\n            case 404:\r\n              this.router.navigateByUrl('/not-found');\r\n              break;\r\n            case 500:\r\n              const navigationExtras: NavigationExtras = {state: {error: error.error}}\r\n              this.router.navigateByUrl('/server-error', navigationExtras);\r\n              break;\r\n            default:\r\n              this.toastr.error('Something unexpected went wrong');\r\n              console.log(error);\r\n              break;\r\n          }\r\n        }\r\n        return throwError(error);\r\n      })\r\n    )\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { AccountService } from '../_services/account.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private accountService: AccountService, private toastr: ToastrService) { }\n  canActivate(): Observable<boolean> {\n    return this.accountService.currentUser$.pipe(\n      map(user => {\n        console.log(user);\n        if (user.roles.includes('Admin') || user.roles.includes('Moderator')) {\n          return true;\n        }\n        this.toastr.error('You cannot enter this area');\n        return false;\n      })\n    )\n  }\n\n}","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { User } from '../_models/user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\nbaseUrl =environment.apiUrl;\n  constructor(private http:HttpClient) { }\n\n  getUserWithRoles() {\n    return this.http.get<Partial<User[]>>(this.baseUrl + 'admin/users-with-roles');\n  }\n  updateUserRoles(username: string, roles: string[]) {\n    return this.http.post(this.baseUrl + 'admin/edit-roles/' + username + '?roles=' + roles, {});\n  }\n}\n","import { Component, OnInit } from '@angular/core';\r\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\r\nimport { RolesModalComponent } from 'src/app/modals/roles-modal/roles-modal.component';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AdminService } from 'src/app/_services/admin.service';\r\n\r\n@Component({\r\n  selector: 'app-user-management',\r\n  templateUrl: './user-management.component.html',\r\n  styleUrls: ['./user-management.component.css']\r\n})\r\nexport class UserManagementComponent implements OnInit {\r\n  users: Partial<User[]>;\r\n  bsModalRef: BsModalRef;\r\n  constructor(private adminService: AdminService, private modalService: BsModalService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getUsersWithRoles();\r\n  }\r\n  getUsersWithRoles() {\r\n    this.adminService.getUserWithRoles().subscribe(users => {\r\n      this.users = users;\r\n    })\r\n  }\r\n  openRolesModal(user: User) {\r\n    const config = {\r\n      class: 'modal-dialog-centered',\r\n      initialState: {\r\n        user,\r\n        roles: this.getRolesArray(user)\r\n      }\r\n    }\r\n    this.bsModalRef = this.modalService.show(RolesModalComponent, config);\r\n    this.bsModalRef.content.updateSelectedRoles.subscribe(values => {\r\n      const rolesToUpdate = {\r\n        roles: [...values.filter(el => el.checked === true).map(el => el.name)]\r\n      };\r\n      if (rolesToUpdate) {\r\n        this.adminService.updateUserRoles(user.username, rolesToUpdate.roles).subscribe(() => {\r\n          user.roles = [...rolesToUpdate.roles]\r\n        })\r\n      }\r\n    })\r\n  }\r\n  private getRolesArray(user) {\r\n    const roles = [];\r\n    const userRoles = user.roles;\r\n    const availableRoles: any[] = [\r\n      { name: 'Admin', value: 'Admin' },\r\n      { name: 'Moderator', value: 'Moderator' },\r\n      { name: 'Member', value: 'Member' }\r\n    ];\r\n\r\n    availableRoles.forEach(role => {\r\n      let isMatch = false;\r\n      for (const userRole of userRoles) {\r\n        if (role.name === userRole) {\r\n          isMatch = true;\r\n          role.checked = true;\r\n          roles.push(role);\r\n          break;\r\n        }\r\n      }\r\n      if (!isMatch) {\r\n        role.checked = false;\r\n        roles.push(role);\r\n      }\r\n    })\r\n    return roles;\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"row\">\n    <table class=\"table\">\n        <tr>\n            <th style=\"width: 30%;\">Username</th>\n            <th style=\"width: 40%;\">Active roles</th>\n            <th style=\"width: 30%;\"></th>\n        </tr>\n        <tr *ngFor=\"let user of users\">\n            <td>{{user.username}}</td>\n            <td>{{user.roles}}</td>\n            <td><button (click)=\"openRolesModal(user)\" class=\"btn btn-info\">Edit Roles</button></td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NgxGalleryAnimation, NgxGalleryImage, NgxGalleryOptions } from '@kolkov/ngx-gallery';\r\n\r\n@Component({\r\n  selector: 'app-member-detail',\r\n  templateUrl: './member-detail.component.html',\r\n  styleUrls: ['./member-detail.component.css']\r\n})\r\nexport class MemberDetailComponent implements OnInit {\r\n  member: Member;\r\n  galleryOptions: NgxGalleryOptions[];\r\n  galleryImages: NgxGalleryImage[];\r\n\r\n  constructor(private memberService: MembersService, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n    this.galleryOptions = [\r\n      {\r\n        width: '500px',\r\n        height: '500px',\r\n        imagePercent: 100,\r\n        thumbnailsColumns: 4,\r\n        imageAnimation: NgxGalleryAnimation.Slide,\r\n        preview: false\r\n      }]\r\n     \r\n  }\r\n  getImages(): NgxGalleryImage[] {\r\n    const imageUrls = [];\r\n    for (const photo of this.member.photos) {\r\n      imageUrls.push({\r\n        small: photo?.url,\r\n        medium: photo?.url,\r\n        big: photo?.url\r\n      })\r\n    }\r\n    return imageUrls;\r\n  }\r\n\r\n  loadMember() {\r\n    this.memberService.getMember(this.route.snapshot.paramMap.get('username')).subscribe(member => {\r\n      this.member = member;\r\n      this.galleryImages = this.getImages();\r\n    })\r\n  }\r\n}\r\n","<div class=\"row\" *ngIf=\"member\">\r\n    <div class=\"col-4\">\r\n        <div class=\"card\">\r\n            <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" \r\n                class=\"card-img-top img-thumbnail\">\r\n            <div class=\"card-body\">\r\n                <div>\r\n                    <strong>Location:</strong>\r\n                    <p>{{member.city}}, {{member.country}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Age:</strong>\r\n                    <p>{{member.age}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Last Active:</strong>\r\n                    <p>{{member.lastActive}}</p>\r\n                </div>\r\n                <div>\r\n                    <strong>Member since:</strong>\r\n                    <p>{{member.created}}</p>\r\n                </div>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"btn-group d-flex\">\r\n                    <button class=\"btn btn-primary\">Like</button>\r\n                    <button class=\"btn btn-success\">Message</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"col-8\">\r\n        <tabset class=\"member-tabset\">\r\n            <tab heading='About {{member.knownAs}}'>\r\n                <h4>Description</h4>\r\n                <p>{{member.introduction}}</p>\r\n                <h4>Looking for</h4>\r\n                <p>{{member.lookingFor}}</p>\r\n            </tab>\r\n            <tab heading='Interests'>\r\n                <h4>Interests</h4>\r\n                <p>{{member.interests}}</p>\r\n            </tab>\r\n            <tab heading='Photos'>\r\n                <ngx-gallery [options]=\"galleryOptions\" [images]=\"galleryImages\" \r\n                style=\"display: inline-block; margin-bottom: 20px;\"></ngx-gallery>\r\n            </tab>\r\n            <tab heading='Messages'>\r\n                <p>Messages will go here</p>\r\n            </tab>\r\n        </tabset>\r\n    </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private accountService: AccountService, private toast: ToastrService) { }\r\n  canActivate(): Observable<boolean> {\r\n    return this.accountService.currentUser$.pipe(\r\n      map(user => {\r\n        if (user) return true;\r\n        this.toast.error('You shall not pass!');\r\n      })\r\n    )\r\n\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-list',\r\n  templateUrl: './member-list.component.html',\r\n  styleUrls: ['./member-list.component.css']\r\n})\r\nexport class MemberListComponent implements OnInit {\r\nmembers: Member[];\r\n  constructor(private memberService: MembersService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMamber();\r\n  }\r\nloadMamber(){\r\n  this.memberService.getMembers().subscribe( member=>{\r\n    this.members=member;\r\n  })\r\n\r\n  \r\n}\r\n}\r\n","<div class=\"row\">\r\n    <div *ngFor=\"let member of members\" class=\"col-2\">\r\n       <app-member-card [member]=\"member\"></app-member-card>\r\n    </div>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { User } from './_models/user';\r\nimport { AccountService } from './_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'The Dating App';\r\n  Users: any;\r\n  constructor( private accountService: AccountService) { }\r\n\r\n  ngOnInit() {\r\n    this.setCurrentUser();\r\n  }\r\n  setCurrentUser() {\r\n    const user: User = JSON.parse(localStorage.getItem('user'));\r\n    this.accountService.setCurrentUser(user);\r\n  }\r\n}\r\n","<app-nav></app-nav>\r\n<div class=\"container\" style=\"margin-top: 100px;\">\r\n  <router-outlet></router-outlet>\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Member } from '../_models/member';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MembersService {\r\n\r\n  baseUrl = environment.apiUrl;\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getMembers() {\r\n    return this.http.get<Member[]>(this.baseUrl + 'users');\r\n  }\r\n  \r\n  getMember(username : string){\r\n    return this.http.get<Member>(this.baseUrl+'users/'+username); \r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { SharedModule } from './_modules/shared.module';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { ErrorInterceptor } from './_interceptors/error.interceptor';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { MemberCardComponent } from './members/member-card/member-card.component';\r\nimport { JwtInterceptor } from './_interceptors/jwt.interceptor';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { TextInputComponent } from './_forms/text-input/text-input.component';\r\nimport { DateInputComponent } from './_forms/date-input/date-input.component';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { HasRoleDirective } from './_directives/has-role.directive';\r\nimport { UserManagementComponent } from './admin/user-management/user-management.component';\r\nimport { RolesModalComponent } from './modals/roles-modal/roles-modal.component';\r\nimport { SelectInputComponent } from './_forms/select-input/select-input.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavComponent,\r\n    HomeComponent,\r\n    RegisterComponent,\r\n    MemberListComponent,\r\n    MemberDetailComponent,\r\n    ListsComponent,\r\n    MessagesComponent,\r\n    TestErrorsComponent,\r\n    NotFoundComponent,\r\n    ServerErrorComponent,\r\n    MemberCardComponent,\r\n    MemberEditComponent,\r\n    TextInputComponent,\r\n    DateInputComponent,\r\n    AdminPanelComponent,\r\n    HasRoleDirective,\r\n    UserManagementComponent,\r\n    RolesModalComponent,\r\n    SelectInputComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule \r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true},\r\n    {provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true}\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, Input, OnInit, Self } from '@angular/core';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-text-input',\r\n  templateUrl: './text-input.component.html',\r\n  styleUrls: ['./text-input.component.css']\r\n})\r\nexport class TextInputComponent implements ControlValueAccessor {\r\n  @Input() label: string;\r\n  @Input() type = 'text';\r\n  constructor(@Self() public ngControl: NgControl) { \r\n    this.ngControl.valueAccessor = this;\r\n  }\r\n  writeValue(obj: any): void {\r\n   \r\n  }\r\n  registerOnChange(fn: any): void {\r\n    \r\n  }\r\n  registerOnTouched(fn: any): void {\r\n    \r\n  } \r\n\r\n}\r\n","<div class=\"form-group\">\r\n    <input \r\n        [class.is-invalid]=\"ngControl.touched && ngControl.invalid\"\r\n        type={{type}}\r\n        class=\"form-control\" \r\n        [formControl]=\"ngControl.control\"\r\n        placeholder={{label}}>       \r\n     <div *ngIf=\"ngControl.control.errors?.required\" class=\"invalid-feedback\">Please enter a {{label}}</div>\r\n    <div *ngIf=\"ngControl.control.errors?.minlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at least {{ngControl.control.errors.minlength['requiredLength']}}\r\n    </div>\r\n    <div *ngIf=\"ngControl.control.errors?.maxlength\" class=\"invalid-feedback\">\r\n        {{label}} must be at most {{ngControl.control.errors.maxlength['requiredLength']}}\r\n    </div>\r\n   \r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-lists',\r\n  templateUrl: './lists.component.html',\r\n  styleUrls: ['./lists.component.css']\r\n})\r\nexport class ListsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>lists works!</p>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../_models/user';\r\nimport { AccountService } from '../_services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-nav',\r\n  templateUrl: './nav.component.html',\r\n  styleUrls: ['./nav.component.css']\r\n})\r\nexport class NavComponent implements OnInit {\r\n  model: any = {}\r\n\r\n  constructor(public accountService: AccountService, private router: Router, private toastr: ToastrService) { }\r\n\r\n  ngOnInit(): void {\r\n    \r\n  }\r\n  login() {\r\n    this.accountService.login(this.model).subscribe(response => {\r\n      this.router.navigateByUrl('/members');\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.accountService.logout();  \r\n    this.router.navigateByUrl('/');\r\n  }\r\n \r\n}\r\n","<nav class=\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\">\r\n    <div class=\"container\">\r\n        <a class=\"navbar-brand\" routerLink='/' routerLinkActive='active'>Learning App</a>\r\n        <ul class=\"navbar-nav mr-auto\" >\r\n            <ng-container *ngIf=\"accountService.currentUser$ | async\">\r\n                <li class=\"nav-item \">\r\n                    <a class=\"nav-link\" routerLink='/members' routerLinkActive='active'>Matches </a>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <a class=\"nav-link\" routerLink='/lists' routerLinkActive='active'>Lists</a>\r\n                </li>\r\n                <li class=\"nav-item\" *appHasRole='[\"Member\"]'>\r\n                    <a class=\"nav-link \" routerLink='/messages' routerLinkActive='active'>Massages</a>\r\n                </li>\r\n                <li class=\"nav-item\"  *appHasRole='[\"Admin\",\"Moderator\"]'>\r\n                    <a class=\"nav-link \" routerLink='/admin' routerLinkActive='active'>Admin</a>\r\n                </li>\r\n            </ng-container>\r\n            <li class=\"nav-item\">\r\n                <a class=\"nav-link \" routerLink='/errors' routerLinkActive='active'>Errors</a>\r\n            </li>\r\n\r\n        </ul>\r\n        <div class=\"dropdown\" *ngIf=\"(accountService.currentUser$ | async) as user\" dropdown>\r\n            <a class=\"dropdown-toggle text-light\" dropdownToggle>Welcome {{user.username || user.username | titlecase}}</a>\r\n            <div class=\"dropdown-menu mt-3\" *dropdownMenu>\r\n                <a routerLink='/member/edit' class=\"dropdown-item\">Edit Profile</a>\r\n                <div class=\"dropdown-divider\"></div>\r\n                <a class=\"dropdown-item\" (click)=\"logout()\">Logout</a>\r\n\r\n            </div>\r\n        </div>\r\n\r\n        <form *ngIf=\"(accountService.currentUser$ | async) === null\" #loginForm=\"ngForm\"\r\n            class=\"form-inline mt-2 mt-md-0\" (ngSubmit)=\"login()\" autocomplete=\"off\">\r\n            <input name=\"username\" [(ngModel)]=\"model.username\" class=\"form-control mr-sm-2\" type=\"text\"\r\n                placeholder=\"UserName\">\r\n            <input name=\"password\" [(ngModel)]=\"model.password\" class=\"form-control mr-sm-2\" type=\"password\"\r\n                placeholder=\"Password\">\r\n            <button class=\"btn btn-success my-2 my-sm-0\" type=\"submit\">Login</button>\r\n        </form>\r\n\r\n    </div>\r\n</nav>","import { Component, Input, OnInit } from '@angular/core';\r\nimport { Member } from 'src/app/_models/member';\r\n\r\n@Component({\r\n  selector: 'app-member-card',\r\n  templateUrl: './member-card.component.html',\r\n  styleUrls: ['./member-card.component.css']\r\n})\r\nexport class MemberCardComponent implements OnInit {\r\n@Input() member:Member;\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"card mb-4\">\r\n    <div class=\"card-img-wrapper\">\r\n        <img src=\"{{member.photoUrl || './assets/user.png'}}\" alt=\"{{member.knownAs}}\" class=\"card-img-top\">\r\n        <ul class=\"list-inline member-icons animate text-center\">\r\n            <li class=\"list-inline-item\"><button routerLink='/members/{{member.userName}}' class=\"btn btn-primary\">\r\n                <i class=\"fa fa-user\"></i></button></li>\r\n            <li class=\"list-inline-item\"><button class=\"btn btn-primary\">\r\n                <i class=\"fa fa-heart\"></i></button></li>\r\n            <li class=\"list-inline-item\"><button class=\"btn btn-primary\">\r\n                <i class=\"fa fa-envelope\"></i></button></li>\r\n        </ul>\r\n    </div>\r\n    <div class=\"card-body p-1\">\r\n        <h6 class=\"card-title text-center mb-1\"><i class=\"fa fa-user mr-2\"></i>\r\n            {{member.knownAs}}\r\n        </h6>\r\n        <p class=\"card-text text-muted text-center\">{{member.city}}</p>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-admin-panel',\n  templateUrl: './admin-panel.component.html',\n  styleUrls: ['./admin-panel.component.css']\n})\nexport class AdminPanelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h2>Admin Panel</h2>\n<div class=\"tab-panel\">\n    <tabset class=\"member-tabset\">\n        <tab heading='User management' *appHasRole='[\"Admin\"]'>\n            <div class=\"container\">\n                <app-user-management></app-user-management>\n            </div>\n        </tab>\n        <tab heading='Photo management' *appHasRole='[\"Admin\", \"Moderator\"]'>\n            <div class=\"container\">\n               \n            </div>\n        </tab>\n    </tabset>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { take } from 'rxjs/operators';\r\nimport { Member } from 'src/app/_models/member';\r\nimport { User } from 'src/app/_models/user';\r\nimport { AccountService } from 'src/app/_services/account.service';\r\nimport { MembersService } from 'src/app/_services/members.service';\r\n\r\n@Component({\r\n  selector: 'app-member-edit',\r\n  templateUrl: './member-edit.component.html',\r\n  styleUrls: ['./member-edit.component.css']\r\n})\r\nexport class MemberEditComponent implements OnInit {\r\n  member: Member;\r\n  user: User;\r\n  constructor(private accountService: AccountService, private memberService: MembersService) {\r\n    this.accountService.currentUser$.pipe(take(1)).subscribe(x => this.user = x);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadMember();\r\n  }\r\n  loadMember() {\r\n    this.memberService.getMember(this.user.username).subscribe(member => { \r\n      this.member = member\r\n     })\r\n  }\r\n}\r\n","<h1 *ngIf=\"member\">{{member.userName}}</h1>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminPanelComponent } from './admin/admin-panel/admin-panel.component';\r\nimport { NotFoundComponent } from './errors/not-found/not-found.component';\r\nimport { ServerErrorComponent } from './errors/server-error/server-error.component';\r\nimport { TestErrorsComponent } from './errors/test-errors/test-errors.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { ListsComponent } from './lists/lists.component';\r\nimport { MemberDetailComponent } from './members/member-detail/member-detail.component';\r\nimport { MemberEditComponent } from './members/member-edit/member-edit.component';\r\nimport { MemberListComponent } from './members/member-list/member-list.component';\r\nimport { MessagesComponent } from './messages/messages.component';\r\nimport { AdminGuard } from './_guards/admin.guard';\r\nimport { AuthGuard } from './_guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: HomeComponent },\r\n  {\r\n    path: '',\r\n    runGuardsAndResolvers: 'always',\r\n    canActivate: [AuthGuard],\r\n    children: [\r\n      { path: 'members', component: MemberListComponent },\r\n      { path: 'members/:username', component: MemberDetailComponent },\r\n      { path: 'member/edit', component: MemberEditComponent },\r\n      { path: 'lists', component: ListsComponent },\r\n      { path: 'messages', component: MessagesComponent },\r\n      { path: 'admin', component: AdminPanelComponent , canActivate:[AdminGuard]}\r\n     \r\n    ]\r\n  },\r\n  {path: 'errors', component: TestErrorsComponent},\r\n  {path: 'not-found', component: NotFoundComponent},\r\n  {path: 'server-error', component: ServerErrorComponent},\r\n  { path: '**', component: NotFoundComponent, pathMatch: 'full' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, EventEmitter, Input, OnInit } from '@angular/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\nimport { User } from 'src/app/_models/user';\r\n\r\n@Component({\r\n  selector: 'app-roles-modal',\r\n  templateUrl: './roles-modal.component.html',\r\n  styleUrls: ['./roles-modal.component.css']\r\n})\r\nexport class RolesModalComponent implements OnInit {\r\n@Input() updateSelectedRoles = new EventEmitter();\r\nuser:User;\r\nroles: any[];\r\n  constructor(public bsModalRef: BsModalRef) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\nupdateRoles() {\r\n  this.updateSelectedRoles.emit(this.roles);\r\n  this.bsModalRef.hide();\r\n}\r\n}\r\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title pull-left\">Edit roles for {{user.username}}</h4>\n    <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"bsModalRef.hide()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n  </div>\n  <div class=\"modal-body\">\n    <form #rolesForm=\"ngForm\" id=\"rolesForm\">\n        <div class=\"form-check\" *ngFor=\"let role of roles\">\n            <input type=\"checkbox\"\n                class=\"form-check-input\"\n                [checked]=\"role.checked\"\n                value=\"role.name\"\n                (change)=\"role.checked = !role.checked\"\n                [disabled]=\"role.name === 'Admin' && user.username === 'admin'\"\n            >\n            <label>{{role.name}}</label>\n        </div>\n    </form>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-default\" (click)=\"bsModalRef.hide()\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-success\" (click)=\"updateRoles()\">Submit</button>\n  </div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}